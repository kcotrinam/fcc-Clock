{"version":3,"sources":["components/Timer.jsx","components/MainTitle.jsx","components/controlers/Control.jsx","components/Title.jsx","components/Audio.jsx","components/App.jsx","reducers/time.js","reducers/index.js","store/store.js","index.js"],"names":["Timer","sessionTime","useSelector","state","timeReducer","session","breakCounter","break","dispatch","useDispatch","useState","timer","setTimer","isActive","setIsActive","countRef","useRef","countLoopRef","useEffect","audio","document","querySelector","current","play","id","className","getSeconds","slice","minutes","Math","floor","formatTime","onClick","clearInterval","setInterval","type","pause","currentTime","MainTitle","text","Control","counter","controllerType","controller","Title","title","Audio","preload","src","App","INITIAL_STATE","action","allReducers","combineReducers","myStore","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","store","getElementById"],"mappings":"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","file":"static/js/main.e7cd6990.chunk.js","sourcesContent":["import { useEffect, useState, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { GrPauseFill } from 'react-icons/gr';\nimport { BiReset } from 'react-icons/bi';\nimport { BsPlayFill } from 'react-icons/bs';\n\nconst Timer = () => {\n\tconst sessionTime = useSelector((state) => state.timeReducer.session);\n\tconst breakCounter = useSelector((state) => state.timeReducer.break);\n\tconst dispatch = useDispatch();\n\tconst [timer, setTimer] = useState(sessionTime * 60);\n\tconst [isActive, setIsActive] = useState(false);\n\tconst countRef = useRef(null);\n\tconst countLoopRef = useRef(false);\n\n\tuseEffect(() => {\n\t\tif (!isActive) setTimer(sessionTime * 60);\n\t\telse if (isActive && timer < 1);\n\t}, [sessionTime]);\n\n\tconst handleStart = () => {\n\t\tif (isActive) {\n\t\t\tclearInterval(countRef.current);\n\t\t\tsetIsActive(false);\n\t\t} else if (timer > 1) {\n\t\t\tsetIsActive(true);\n\t\t\tcountRef.current = setInterval(() => {\n\t\t\t\tsetTimer((timer) => timer - 1);\n\t\t\t}, 1000);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tconst audio = document.querySelector('#beep');\n\n\t\tif (timer < 1 && !countLoopRef.current) {\n\t\t\taudio.play();\n\t\t\tsetTimer(breakCounter * 60);\n\t\t\tcountLoopRef.current = true;\n\t\t} else if (timer < 1 && countLoopRef.current) {\n\t\t\taudio.play();\n\t\t\tsetIsActive(false);\n\t\t\tsetTimer(sessionTime * 60);\n\t\t\tcountLoopRef.current = false;\n\t\t}\n\t}, [timer]);\n\n\tconst formatTime = () => {\n\t\tconst getSeconds = `0${timer % 60}`.slice(-2);\n\t\tconst minutes = `0${Math.floor(timer / 60)}`.slice(-2);\n\n\t\treturn `${minutes}:${getSeconds}`;\n\t};\n\n\tconst handleReset = () => {\n\t\tdispatch({ type: 'RESET_COUNTERS' });\n\t\tclearInterval(countRef.current);\n\t\tsetIsActive(false);\n\t\tcountLoopRef.current = false;\n\t\tsetTimer(sessionTime * 60);\n\n\t\tconst audio = document.querySelector('#beep');\n\t\taudio.pause();\n\t\taudio.currentTime = 0;\n\t};\n\n\treturn (\n\t\t<div id='timer-label' className='timer'>\n\t\t\t<h2 id='time-left'>{formatTime()}</h2>\n\t\t\t<div className='session-controller'>\n\t\t\t\t<button id='start_stop' className='play' onClick={handleStart}>\n\t\t\t\t\t{isActive ? <GrPauseFill /> : <BsPlayFill />}\n\t\t\t\t</button>\n\t\t\t\t<button id='reset' onClick={handleReset}>\n\t\t\t\t\t<BiReset />\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Timer;\n","import '../scss/components/title.scss';\n\nconst MainTitle = ({ text }) => <h1 id='main-title'>{text}</h1>;\n\nexport default MainTitle;\n","import { BsChevronDown, BsChevronUp } from 'react-icons/bs';\nimport { useDispatch } from 'react-redux';\n\nconst Control = ({ counter, controllerType }) => {\n\tconst dispatch = useDispatch();\n\n\tconst controller = controllerType === 'session';\n\n\treturn (\n\t\t<div>\n\t\t\t<button\n\t\t\t\tid={controller ? 'session-increment' : 'break-increment'}\n\t\t\t\tonClick={() =>\n\t\t\t\t\tdispatch(\n\t\t\t\t\t\tcontroller\n\t\t\t\t\t\t\t? { type: 'INCREMENT_SESSION' }\n\t\t\t\t\t\t\t: { type: 'INCREMENT_BREAK' }\n\t\t\t\t\t)\n\t\t\t\t}>\n\t\t\t\t<BsChevronUp />\n\t\t\t</button>\n\t\t\t<span id={controller ? 'session-length' : 'break-length'}>{counter}</span>\n\t\t\t<button\n\t\t\t\tid={controller ? 'session-decrement' : 'break-decrement'}\n\t\t\t\tonClick={() =>\n\t\t\t\t\tdispatch(\n\t\t\t\t\t\tcontroller\n\t\t\t\t\t\t\t? { type: 'DECREMENT_SESSION' }\n\t\t\t\t\t\t\t: { type: 'DECREMENT_BREAK' }\n\t\t\t\t\t)\n\t\t\t\t}>\n\t\t\t\t<BsChevronDown />\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default Control;\n","const Title = ({ title, id }) => <h3 id={id}>{title}</h3>;\n\nexport default Title;\n","const Audio = ({ id, audio }) => (\n\t<audio id={id} preload='auto' src={audio}></audio>\n);\n\nexport default Audio;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Timer from './Timer';\nimport MainTitle from './MainTitle';\nimport Control from './controlers/Control';\nimport Title from './Title';\nimport Audio from './Audio';\nimport '../scss/base/reset.scss';\nimport '../scss/base/variables.scss';\nimport '../scss/layout/layout.scss';\nimport '../scss/components/controllers.scss';\nimport '../scss/components/button.scss';\nimport '../scss/components/timer.scss';\n\nconst App = () => {\n\tconst counter = useSelector((state) => state.timeReducer.session);\n\tconst breakCounter = useSelector((state) => state.timeReducer.break);\n\n\treturn (\n\t\t<div>\n\t\t\t<MainTitle text='25 + 5 Clock' />\n\t\t\t<div className='controllers'>\n\t\t\t\t<div className='controllers__session'>\n\t\t\t\t\t<Title title='Session Length' id='session-label' />\n\t\t\t\t\t<Control counter={counter} controllerType='session' />\n\t\t\t\t</div>\n\t\t\t\t<div className='controllers__break'>\n\t\t\t\t\t<Title title='Break Length' id='break-label' />\n\t\t\t\t\t<Control counter={breakCounter} controllerType='break' />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='timer-container'>\n\t\t\t\t<Title title='Session' />\n\t\t\t\t<Timer currentTime={counter} />\n\t\t\t</div>\n\t\t\t<Audio\n\t\t\t\tid='beep'\n\t\t\t\taudio='https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav'\n\t\t\t/>\n\t\t\t<div></div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","const INITIAL_STATE = {\n\tsession: 25,\n\tbreak: 5,\n};\n\nconst timeReducer = (state = INITIAL_STATE, action) => {\n\tswitch (action.type) {\n\t\tcase 'INCREMENT_SESSION':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsession: state.session < 60 ? state.session + 1 : state.session,\n\t\t\t};\n\t\tcase 'DECREMENT_SESSION':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsession: state.session <= 1 ? state.session : state.session - 1,\n\t\t\t};\n\t\tcase 'INCREMENT_BREAK':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tbreak: state.break > 59 ? state.break : state.break + 1,\n\t\t\t};\n\t\tcase 'DECREMENT_BREAK':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tbreak: state.break <= 1 ? state.break : state.break - 1,\n\t\t\t};\n\t\tcase 'RESET_COUNTERS':\n\t\t\treturn {\n\t\t\t\tsession: 25,\n\t\t\t\tbreak: 5,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default timeReducer;\n","import timeReducer from './time';\nimport { combineReducers } from 'redux';\n\nconst allReducers = combineReducers({\n\ttimeReducer,\n});\n\nexport default allReducers;\n","import { createStore } from 'redux';\nimport allReducers from '../reducers/index';\n\nconst myStore = createStore(\n\tallReducers,\n\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default myStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport myStore from './store/store';\nimport './scss/theme/dark.scss';\n\nReactDOM.render(\n\t<Provider store={myStore}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}